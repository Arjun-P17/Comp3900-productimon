syntax = "proto3";
package productimon.common;
option go_package = "git.yiad.am/productimon/proto/common";

import "proto/common/events.proto";

message Empty {}

message Timestamp {
  // Nanoseconds since UNIX epoch
  int64 nanos = 1;
}

message Interval {
  Timestamp start = 1;
  Timestamp end = 2;
}

message User {
  string id = 1;
  string email = 2;
  string password = 3;
  bool admin = 4;
}

message Device {
  User user = 1;

  // sequential ID under user
  int64 id = 2;

  enum DeviceType {
    UNKNOWN = 0;
    LINUX = 1;
    MACOS = 2;
    WINDOWS = 3;
    ANDROID = 4;
    IOS = 5;
  }
  DeviceType device_type = 3;

  string name = 4;
}

message Event {
  Device device = 1;

  // increasing id bound to device
  int64 id = 2;

  Interval timeinterval = 3;

  oneof kind {
    AppSwitchEvent app_switch_event = 4;
    ActivityEvent activity_event = 5;
    StartTrackingEvent start_tracking_event = 6;
    StopTrackingEvent stop_tracking_event = 7;
  }
}

message Goal {
  string uid = 1;

  // sequential ID under user
  int64 id = 2;

  repeated Device devices = 3;

  // item is the application/label that goal is relevant to
  oneof item {
    string label = 4;
    string application = 5;
  }

  oneof amount {
    // percentage to increase/decrease usage
    // ie 1.9 = 190% increase, -0.2 = 20% reduction
    // percentAmount must then be >= -1
    float percentAmount = 6;
    // fixed amount to increase/decrease usage in Nanoseconds
    int64 fixedAmount = 7;
  }

  // Interval for which goal is active
  Interval goalInterval = 8;
  // Interval for which we compare goal period to
  // Set to empty to disable comparision (use only fixedAmount)
  Interval compareInterval = 9;

  // specify which days of the week goal is applied to
  // ie. reduce usage of social media on Tuesdays and Thursdays
  // least significant bit is Sunday
  // most significant bit is Monday
  // NOTE: this is currently ignored by aggregator
  int32 daysOfWeek = 10;

  // If compareEqualized = true, then divide compareInterval data by
  // compareInterval/goalInterval, this will equalize the data relative to
  // interval lengths
  //
  // if false then even though compareInterval can be a different length to
  // goalInterval we wont equalize compareInterval data
  bool compareEqualized = 11;

  // indicates if time period for goal has expired
  bool completed = 12;

  // value from 0 to 1, describing percentage progress of goal
  // Negative progress on a goal is still described by 0%
  float progress = 13;

  // NOTE: this is currently ignored by aggregator. we only send email
  oneof notification {
    string email = 14;
    string sms = 15;
    int64 device = 16;
  }
}

message Label {
  string app = 1;
  string label = 2;
  // number of users of this label,
  // only filled when admin request all labels
  int64 used_by = 3;
}
