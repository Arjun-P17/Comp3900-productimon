syntax = "proto3";
package productimon.svc;
option go_package = "git.yiad.am/productimon/proto/svc";

import "proto/common/common.proto";
import "proto/common/events.proto";

service DataAggregator {
  rpc Ping(DataAggregatorPingRequest) returns (DataAggregatorPingResponse);
  rpc PushEvent(stream common.Event) returns (DataAggregatorPushEventResponse);
  rpc GetEvent(DataAggregatorGetEventRequest) returns (stream common.Event);
}

message DataAggregatorPingRequest { string payload = 1; }

message DataAggregatorPingResponse { string payload = 1; }

message DataAggregatorPushEventResponse {
  common.Device device = 1;

  // how many events were added in this stream
  int64 count = 2;

  // latest event on the server for this device
  common.Event final_event = 3;
}

message DataAggregatorGetEventRequest {
  // returned zero or more events, or an error
  message ByDevice { common.Device device = 1; }

  // returnes either one event or an error
  message ById {
    common.Device device = 1;
    int64 id = 2;
  }

  // returned zero or more events, or an error
  message ByType { common.EventType type = 1; }

  oneof query {
    ByDevice by_device = 1;
    ById by_id = 2;
    ByType by_type = 3;
  }
}
